#include "totvs.ch"
#include 'tlpp-core.th'

#define c_ent CHR(13) + CHR(10)

Interface iGeraReinf4000

    PROTECTED METHOD New(;
        jPergunte as Json)              as Object
    PROTECTED METHOD Destroy()          as Object
    PROTECTED METHOD mLocalGravacao     as Logical
    PROTECTED METHOD mProcessa          as Logical
    PROTECTED METHOD mBuscaEmpresa(;
        cEmpresa as Character)          as Json
    PROTECTED METHOD mMonta4010         as Logical
    PROTECTED METHOD mMonta4020         as Logical
    PROTECTED METHOD mGeraArquivo       as Logical
    PROTECTED METHOD mAddBeneficiario(;
        jBeneficario as Json)           as Logical
    PROTECTED METHOD mGeraBeneficiario  as Logical

EndInterface

Class cGeraReinf4000 implements iGeraReinf4000

    // Atributos
    PUBLIC DATA cError           as Character
    PUBLIC DATA lError           as Logical
    PUBLIC DATA cFileName        as Character
    PUBLIC DATA cFileDir         as Character
    PRIVATE DATA cTitle          as Character
    PRIVATE DATA nOption         as Integer
    PRIVATE DATA dDateStart      as Date
    PRIVATE DATA dDateEnd        as Date
    PRIVATE DATA cSeparator      as Character
    PRIVATE DATA nFile           as Integer
    PRIVATE DATA cFilialLogada   as Character
    PRIVATE DATA jBeneficiarios  as Json
    PRIVATE DATA aEmpresas       as Array
    PRIVATE DATA cMatriz         as Character

    // Metodos
    PROTECTED METHOD New(;
        jPergunte as Json)                  as Object
    PROTECTED METHOD Destroy()              as Object
    PROTECTED METHOD mLocalGravacao         as Logical
    PROTECTED METHOD mProcessa              as Logical
    PROTECTED METHOD mBuscaEmpresa(;
        cEmpresa as Character)              as Json
    PROTECTED METHOD mMonta4010             as Logical
    PROTECTED METHOD mMonta4020             as Logical
    PROTECTED METHOD mGeraArquivo           as Logical
    PROTECTED METHOD mAddBeneficiario(;
        jBeneficario as Json)               as Logical
    PROTECTED METHOD mGeraBeneficiario      as Logical

EndClass

User Function XGRe4000()
    Local cPergunte := "XGRE4000" as Character
    Local oGera4000 as Object
    Local jPergunte as Json
    
    if !Pergunte(cPergunte, .T., "Informe os parâmetros de geração")
        FWAlertInfo("Rotina cancelada pelo usuário", "Operação cancelada")
        return
    endif

    jPergunte := {;
        "nOption": MV_PAR01,;
        "dDateStart": MV_PAR02,;
        "dDateEnd": MV_PAR03;
    }

    oGera4000 := cGeraReinf4000():New(jPergunte)

    if oGera4000:lError
        FWAlertInfo(oGera4000:cError, "Parametro invalido")
        oGera4000:Destroy()
        FreeObj(oGera4000)
        FreeObj(jPergunte)
        return
    endif

    if !oGera4000:mLocalGravacao()
        FWAlertInfo("Rotina cancelada pelo usuário", "Operação cancelada")
        oGera4000:Destroy()
        FreeObj(oGera4000)
        FreeObj(jPergunte)
        return
    endif

    oGera4000:mProcessa()

    if !oGera4000:lError
        FWAlertInfo("Local do(s) arquivo(s): " + oGera4000:cFileDir, "Geração finalizada")
    else
        FWAlertInfo(oGera4000:cError, "Geração interrompida")
    endif

    oGera4000:Destroy()
    FreeObj(oGera4000)
    FreeObj(jPergunte)
Return

Method New(jPergunte as Json) as Object Class cGeraReinf4000

    Local cPrefix as Character
    self:cFilialLogada  := cFilAnt
    self:nOption        := jPergunte["nOption"]
    self:dDateStart     := jPergunte["dDateStart"]
    self:dDateEnd       := jPergunte["dDateEnd"]
    self:cError         := ""
    self:lError         := .F.
    self:jBeneficiarios := JsonObject():New()

    self:cSeparator := ";"

    self:aEmpresas  := FWLoadSM0()
    self:cMatriz    := AllTrim(FWSM0Util():GetSM0Data(cEmpAnt,cFilAnt,{'M0_CGC'})[1][2])
    
    cPrefix := self:cFilialLogada + "-" + Substr(Dtos(self:dDateStart),1,6)

    Do Case
        Case self:nOption == 1
            self:cFileName  := cPrefix + "-R4010-ALUGUEL.csv"
            self:cTitle     := "R4010 Aluguel"
        Case self:nOption == 2
            self:cFileName  := cPrefix + "-R4010-JCP.csv"
            self:cTitle     := "R4010 JCP"
        Case self:nOption == 3
            self:cFileName  := cPrefix + "-R4010-DIV.csv"
            self:cTitle     := "R4010 Dividendos"
        Case self:nOption == 4
            self:cFileName  := cPrefix + "-R4020-IR-PCC.csv"
            self:cTitle     := "R4020 IR/PCC Serviço Tomado"
        Case self:nOption == 5
            self:cFileName  := cPrefix + "-4020-JCP.csv"
            self:cTitle     := "R4020 - JCP"
        Case self:nOption == 6
            self:cFileName  := cPrefix + "-4020-IR-PC-IMPORT.csv"
            self:cTitle     := "4020 IR/PIS-COFINS Importação"
        Otherwise
            self:lError := .T.
            self:cError := "Tipo de registro invalido!"
    EndCase

    FreeObj(jPergunte)

return self

Method Destroy () as Object Class cGeraReinf4000

    FreeObj(self:jBeneficiarios)

return nil

Method mLocalGravacao() as Logical Class cGeraReinf4000
    Local lRet := .T.   as Logical
    Local cDir := ""    as Character

    cDir := tFileDialog(, 'Selecione local para salvar o arquivo',,, .F., GETF_RETDIRECTORY)
    
    lRet := !Empty(cDir)
    
    self:cFileDir := cDir + "\"

return lRet

Method mProcessa() as Logical Class cGeraReinf4000

    self:mGeraArquivo()

    if self:lError
        return
    endif

    Do Case
        Case self:nOption == 1 .Or. self:nOption == 2 .Or. self:nOption == 3
            Processa({|| self:mMonta4010()}, "Aguarde...", "Gerando arquivo " + self:cTitle + "...")
        Case self:nOption == 4 .Or. self:nOption == 5 .Or. self:nOption == 6
            Processa({|| self:mMonta4020()}, "Aguarde...", "Gerando arquivo " + self:cTitle + "...")
    EndCase

    if !self:lError .And. (self:nOption == 1 .Or. self:nOption == 2 .Or. self:nOption == 3)
        Processa({|| self:mGeraBeneficiario()}, "Aguarde...", "Gerando arquivo de beneficiarios...")
    endif

    if self:lError
        Ferase(self:cFileDir + self:cFileName)
    endif   

return

Method mGeraArquivo() as Logical Class cGeraReinf4000

    self:nFile   := FCreate(self:cFileDir + self:cFileName)

    if self:nFile < 0
        self:cError := "Erro ao gerar o arquivo"
        self:lError := .T.
    endif

return .T.

Method mBuscaEmpresa(cEmpresa as Character) as Json Class cGeraReinf4000
    Local jEmpresa  as Json
    Local nX        as Integer

    jEmpresa := JsonObject():New()

    jEmpresa["cEmpresa"]	        := self:cMatriz
    jEmpresa["cEstabelecimento"]    := self:cMatriz

    for nX := 1 to Len(self:aEmpresas)
        
        if self:aEmpresas[nX][03]+self:aEmpresas[nX][04]+self:aEmpresas[nX][05] == cEmpresa .And. self:aEmpresas[nX][05] == "01"
            jEmpresa["cEmpresa"]	        := self:aEmpresas[nX][18]
            jEmpresa["cEstabelecimento"]	:= self:aEmpresas[nX][18]
        ElseIf self:aEmpresas[nX][03]+self:aEmpresas[nX][04] == SubStr(cEmpresa, 1, 4) .AND. Val(self:aEmpresas[nX][05]) > 1 .AND. SubStr(cEmpresa, 5, 2) == self:aEmpresas[nX][05]
            jEmpresa["cEmpresa"]	        := self:aEmpresas[aScan(self:aEmpresas, {|X|, X[2] == self:aEmpresas[nX][03]+self:aEmpresas[nX][04]+"01"})][18]
            jEmpresa["cEstabelecimento"]	:= self:aEmpresas[nX][18]
        endif

    next

Return jEmpresa

Method mMonta4010() as Logical Class cGeraReinf4000
    Local cQuery            as Character
    Local cAlias            as Character
    Local cLine             as Character
    Local cEmpresa          as Character
    Local cEstabelecimento  as Character
    Local jBeneficario      as Json
    Local nTotal            as Integer
    Local cFilterJcpDiv     as Character

    Do Case

        Case self:nOption == 2
            cFilterJcpDiv := "AND       E2_EMISSAO BETWEEN '" + Dtos(self:dDateStart) + "' AND '" + Dtos(self:dDateEnd) + "'"   + c_ent
            cFilterJcpDiv += "AND       E2_CODRET = '5706'"                                                                     + c_ent
            cFilterJcpDiv += "AND       E2_TIPO = 'JCP'"                                                                        + c_ent
        
        Case self:nOption == 3
            cFilterJcpDiv := "AND       E2_BAIXA BETWEEN '" + Dtos(self:dDateStart) + "' AND '" + Dtos(self:dDateEnd) + "'"     + c_ent
            cFilterJcpDiv += "AND       E2_TIPO = 'DIV'"                                                                        + c_ent
            cFilterJcpDiv += "AND       E2_NATUREZ IN ('21801411','21801412','21801413' )"                                      + c_ent
            
    EndCase

    cQuery := "SELECT DISTINCT FILIAL, NOME_BENEFICIARIO, PERIODO, CPF_BENEFICIARIO, CODIGO_BENEFICIARIO, COD_NATUREZA_REND,"       + c_ent
    cQuery += "OBSERVACAO, DT_FATO_GERADOR, COMP_FP, IND_DEC_TERC, SUM(VALOR_BRUTO) VALOR_BRUTO, SUM(VLR_REND_TRIB) VLR_REND_TRIB," + c_ent
    cQuery += "SUM(VLR_IR) VLR_IR, IND_RRA, IND_FCI_SCP, NR_INSC_FCI_SCP, PER_SCP, IND_JUD, DT_ESCR_CONT,"                          + c_ent
    cQuery += "OBSERV2, TP_PROC_RRA, NR_PROC_RRA, IND_ORIG_REC, DESC_RRA, QTD_MESES_RRA, CNPJ_ORIG_REGURSO, "                       + c_ent
    cQuery += "VLR_DESP_CUSTAS, VLR_DES_ADVOGADOS, NR_PROC, IND_ORI_REC2, CNPJ_ORI_RCURSO, DESCRICAO, "                             + c_ent
    cQuery += "V_DES_CUSTA, V_DES_ADVO, IND_NIF, FRM_TRIBUT"                                                                        + c_ent
    cQuery += "FROM ("                                                                                                              + c_ent


    Do Case
        // Aluguel
        Case self:nOption == 1

            cQuery += "SELECT       DISTINCT F1_FILIAL FILIAL, "                                                + c_ent
            cQuery += "             A2_NOME NOME_BENEFICIARIO, "                                                + c_ent
            cQuery += "             TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'), 'YYYY-MM') PERIODO,"                 + c_ent
            cQuery += "             A2_CGC CPF_BENEFICIARIO,"                                                   + c_ent
            cQuery += "             NULL CODIGO_BENEFICIARIO,"                                                  + c_ent
            cQuery += "             NVL(TRIM(DHR_NATREN),F2Q_NATREN) COD_NATUREZA_REND,"                        + c_ent
            cQuery += "             NULL OBSERVACAO,"                                                           + c_ent
            cQuery += "             TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'), 'DD/MM/YYYY') DT_FATO_GERADOR,"      + c_ent
            cQuery += "             NULL COMP_FP,"                                                              + c_ent
            cQuery += "             NULL IND_DEC_TERC,"                                                         + c_ent
            cQuery += "             D1_TOTAL VALOR_BRUTO,"                                                      + c_ent
            cQuery += "             D1_BASEIRR VLR_REND_TRIB,"                                                  + c_ent
            cQuery += "             E2_IRRF VLR_IR,"                                                            + c_ent
            cQuery += "             NULL IND_RRA,"                                                              + c_ent
            cQuery += "             NULL IND_FCI_SCP,"                                                          + c_ent
            cQuery += "             NULL NR_INSC_FCI_SCP,"                                                      + c_ent
            cQuery += "             NULL PER_SCP,"                                                              + c_ent
            cQuery += "             NULL IND_JUD,"                                                              + c_ent
            cQuery += "             CASE"                                                                       + c_ent
            cQuery += "                 WHEN NVL(TRIM(DHR_NATREN),F2Q_NATREN) = '12052' "                       + c_ent
            cQuery += "                 THEN TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY') "           + c_ent
            cQuery += "                 ELSE NULL "                                                             + c_ent
            cQuery += "             END DT_ESCR_CONT, "                                                         + c_ent
            cQuery += "             NULL OBSERV2, "                                                             + c_ent
            cQuery += "             NULL TP_PROC_RRA, "                                                         + c_ent
            cQuery += "             NULL NR_PROC_RRA, "                                                         + c_ent
            cQuery += "             NULL IND_ORIG_REC, "                                                        + c_ent
            cQuery += "             NULL DESC_RRA, "                                                            + c_ent
            cQuery += "             NULL QTD_MESES_RRA, "                                                       + c_ent
            cQuery += "             NULL CNPJ_ORIG_REGURSO, "                                                   + c_ent
            cQuery += "             NULL VLR_DESP_CUSTAS, "                                                     + c_ent
            cQuery += "             NULL VLR_DES_ADVOGADOS, "                                                   + c_ent
            cQuery += "             NULL NR_PROC, "                                                             + c_ent
            cQuery += "             NULL IND_ORI_REC2, "                                                        + c_ent
            cQuery += "             NULL CNPJ_ORI_RCURSO, "                                                     + c_ent
            cQuery += "             NULL DESCRICAO, "                                                           + c_ent
            cQuery += "             NULL V_DES_CUSTA, "                                                         + c_ent
            cQuery += "             NULL V_DES_ADVO, "                                                          + c_ent
            cQuery += "             NULL IND_NIF, "                                                             + c_ent
            cQuery += "             NULL FRM_TRIBUT "                                                           + c_ent
            cQuery += "FROM         SIGAGMS." + RetSqlName("SF1") + " SF1"                                      + c_ent

            cQuery += "INNER JOIN   SIGAGMS." + RetSqlName("SD1") + " SD1  "                                    + c_ent
            cQuery += "ON           F1_FILIAL = D1_FILIAL "                                                     + c_ent
            cQuery += "AND          F1_SERIE = D1_SERIE "                                                       + c_ent
            cQuery += "AND          F1_DOC = D1_DOC "                                                           + c_ent
            cQuery += "AND          F1_FORNECE = D1_FORNECE "                                                   + c_ent
            cQuery += "AND          F1_LOJA     = D1_LOJA "                                                     + c_ent
            cQuery += "AND          F1_TIPO = D1_TIPO "                                                         + c_ent
            cQuery += "AND          F1_EMISSAO = D1_EMISSAO "                                                   + c_ent
            cQuery += "AND          SF1.D_E_L_E_T_ = SD1.D_E_L_E_T_ "                                           + c_ent

            cQuery += "INNER JOIN   SIGAGMS." + RetSqlName("SA2") + " SA2"                                      + c_ent
            cQuery += "ON           A2_FILIAL = '" + FwxFilial("SA2") + "'"                                     + c_ent
            cQuery += "AND          F1_FORNECE = A2_COD"                                                        + c_ent
            cQuery += "AND          F1_LOJA     = A2_LOJA "                                                     + c_ent
            cQuery += "AND          SF1.D_E_L_E_T_ = SA2.D_E_L_E_T_"                                            + c_ent

            cQuery += "INNER JOIN   SIGAGMS." + RetSqlName("SB1") + " SB1 "                                     + c_ent
            cQuery += "ON           B1_FILIAL = '"+ FwXFilial("SB1") + "' "                                     + c_ent
            cQuery += "AND          D1_COD = B1_COD "                                                           + c_ent
            cQuery += "AND          SD1.D_E_L_E_T_ = SB1.D_E_L_E_T_ "                                           + c_ent         

            cQuery += "INNER JOIN   SIGAGMS." + RetSqlName("SE2") + " SE2 "                                     + c_ent
            cQuery += "ON           SE2.D_E_L_E_T_ = SF1.D_E_L_E_T_ "                                           + c_ent
            cQuery += "AND          E2_FILORIG = F1_FILIAL "                                                    + c_ent
            cQuery += "AND          E2_FILIAL = '" + Substr(self:cFilialLogada,1,4) + "' "                      + c_ent
            cQuery += "AND          E2_PREFIXO = F1_SERIE "                                                     + c_ent
            cQuery += "AND          E2_NUM = F1_DOC "                                                           + c_ent
            cQuery += "AND          E2_FORNECE = F1_FORNECE "                                                   + c_ent
            cQuery += "AND          E2_TIPO = 'NF' "                                                            + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("SF4") + " SF4 "                                     + c_ent
            cQuery += "ON           SD1.D_E_L_E_T_ = SF4.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND          D1_FILIAL = F4_FILIAL"                                                      + c_ent
            cQuery += "AND          D1_TES = F4_CODIGO"                                                         + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("DHR") + " DHR "                                     + c_ent
            cQuery += "ON           DHR.D_E_L_E_T_ = SD1.D_E_L_E_T_ "                                           + c_ent
            cQuery += "AND          DHR_DOC = D1_DOC "                                                          + c_ent
            cQuery += "AND          DHR_SERIE = D1_SERIE "                                                      + c_ent
            cQuery += "AND          DHR_FORNEC = D1_FORNECE "                                                   + c_ent
            cQuery += "AND          DHR_LOJA = D1_LOJA "                                                        + c_ent
            cQuery += "AND          DHR_ITEM = D1_ITEM "                                                        + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("F2Q") + " F2Q "                                     + c_ent
            cQuery += "ON           F2Q.D_E_L_E_T_ = SD1.D_E_L_E_T_ "                                           + c_ent
            cQuery += "AND          F2Q.F2Q_FILIAL = '" + FwXfilial("F2Q") + "'"                                + c_ent
            cQuery += "AND          F2Q.F2Q_PRODUT = SD1.D1_COD "                                               + c_ent

            cQuery += "WHERE        SF1.D_E_L_E_T_ = ' ' "                                                      + c_ent
            cQuery += "AND          F1_FILIAL BETWEEN '" + Substr(self:cFilialLogada,1,4) + "00' "              + c_ent
            cQuery += "                 AND '" + Substr(self:cFilialLogada,1,4) + "ZZ' "                        + c_ent
            cQuery += "AND          E2_BAIXA BETWEEN '" + Dtos(self:dDateStart) + "' "                          + c_ent
            cQuery += "                 AND '" + Dtos(self:dDateEnd) + "' "  + c_ent
            cQuery += "AND          E2_CODRET = '3208' "                                                        + c_ent
            cQuery += "AND          A2_TIPO = 'F' "                                                             + c_ent
            cQuery += "AND          D1_BASEIRR > 0 "                                                            + c_ent

            // JCP e Dividendos
        Case self:nOption == 2 .Or. self:nOption == 3
            cQuery += "SELECT       E2_FILIAL FILIAL,"                                                          + c_ent
            cQuery += "             A2_NOME NOME_BENEFICIARIO, "                                                + c_ent
            cQuery += "             TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'YYYY-MM') PERIODO,"               + c_ent
            cQuery += "             A2_CGC CPF_BENEFICIARIO,"                                                   + c_ent
            cQuery += "             NULL CODIGO_BENEFICIARIO,"                                                  + c_ent
            cQuery += "             NVL(TRIM(FKF_NATREN),ED_NATREN) COD_NATUREZA_REND,"                         + c_ent
            cQuery += "             NULL OBSERVACAO,"                                                           + c_ent
            cQuery += "             TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY') DT_FATO_GERADOR,"    + c_ent
            cQuery += "             NULL COMP_FP,"                                                              + c_ent
            cQuery += "             NULL IND_DEC_TERC,"                                                         + c_ent
            cQuery += "             E2_BASEIRF VALOR_BRUTO,"                                                    + c_ent
            cQuery += "             E2_BASEIRF VLR_REND_TRIB,"                                                  + c_ent
            cQuery += "             E2_IRRF VLR_IR,"                                                            + c_ent
            cQuery += "             NULL IND_RRA,"                                                              + c_ent
            cQuery += "             NULL IND_FCI_SCP,"                                                          + c_ent
            cQuery += "             NULL NR_INSC_FCI_SCP,"                                                      + c_ent
            cQuery += "             NULL PER_SCP,"                                                              + c_ent
            cQuery += "             NULL IND_JUD,"                                                              + c_ent
            cQuery += "             CASE"                                                                       + c_ent
            cQuery += "                 WHEN FKF_NATREN = '12052'"                                              + c_ent
            cQuery += "                 THEN TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY')"            + c_ent
            cQuery += "                 ELSE NULL"                                                              + c_ent
            cQuery += "             END DT_ESCR_CONT,"                                                          + c_ent
            cQuery += "             NULL OBSERV2,"                                                              + c_ent
            cQuery += "             NULL TP_PROC_RRA,"                                                          + c_ent
            cQuery += "             NULL NR_PROC_RRA,"                                                          + c_ent
            cQuery += "             NULL IND_ORIG_REC,"                                                         + c_ent
            cQuery += "             NULL DESC_RRA,"                                                             + c_ent
            cQuery += "             NULL QTD_MESES_RRA,"                                                        + c_ent
            cQuery += "             NULL CNPJ_ORIG_REGURSO,"                                                    + c_ent
            cQuery += "             NULL VLR_DESP_CUSTAS,"                                                      + c_ent
            cQuery += "             NULL VLR_DES_ADVOGADOS,"                                                    + c_ent
            cQuery += "             NULL NR_PROC,"                                                              + c_ent
            cQuery += "             NULL IND_ORI_REC2,"                                                         + c_ent
            cQuery += "             NULL CNPJ_ORI_RCURSO,"                                                      + c_ent
            cQuery += "             NULL DESCRICAO,"                                                            + c_ent
            cQuery += "             NULL V_DES_CUSTA,"                                                          + c_ent
            cQuery += "             NULL V_DES_ADVO,"                                                           + c_ent
            cQuery += "             NULL IND_NIF,"                                                              + c_ent
            cQuery += "             NULL FRM_TRIBUT"                                                            + c_ent
            cQuery += "FROM         SIGAGMS." + RetSqlName("SE2") + " SE2"                                      + c_ent

            cQuery += "LEFT JOIN    SIGAGMS."+ RetSqlName("SA2") +" SA2"                                        + c_ent
            cQuery += "ON           A2_FILIAL = '" + FWxFilial("SA2") + "'"                                     + c_ent
            cQuery += "AND          E2_FORNECE = A2_COD"                                                        + c_ent
            cQuery += "AND          E2_LOJA     = A2_LOJA "                                                     + c_ent
            cQuery += "AND          SE2.D_E_L_E_T_ = SA2.D_E_L_E_T_"                                            + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("SED") + " SED "                                     + c_ent
            cQuery += "ON           SED.D_E_L_E_T_ = SE2.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND          ED_FILIAL = '" + FwXFilial("SED") + "' "                                    + c_ent
            cQuery += "AND          ED_CODIGO = E2_NATUREZ "                                                    + c_ent

            cQuery += "LEFT JOIN    SIGAGMS."+ RetSqlName("FK7") + " FK7"                                       + c_ent
            cQuery += "ON           FK7_ALIAS = 'SE2'"                                                          + c_ent
            cQuery += "AND          FK7.D_E_L_E_T_ = SE2.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND          FK7_FILTIT = E2_FILIAL"                                                     + c_ent
            cQuery += "AND          FK7_PREFIX = E2_PREFIXO"                                                    + c_ent
            cQuery += "AND          FK7_NUM = E2_NUM"                                                           + c_ent
            cQuery += "AND          FK7_PARCEL = E2_PARCELA"                                                    + c_ent
            cQuery += "AND          FK7_TIPO = E2_TIPO"                                                         + c_ent
            cQuery += "AND          FK7_CLIFOR = E2_FORNECE"                                                    + c_ent
            cQuery += "AND          FK7_LOJA	= E2_LOJA"                                                      + c_ent

            cQuery += "LEFT JOIN    SIGAGMS."+ RetSqlName("FKF") + " FKF"                                       + c_ent
            cQuery += "ON           FKF.D_E_L_E_T_ = FK7.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND          FKF_FILIAL BETWEEN SUBSTR(FK7_FILIAL,1,4) || '00'"                          + c_ent
            cQuery += "                 AND SUBSTR(FK7_FILIAL,1,4) || 'ZZ'"                                     + c_ent
            cQuery += "AND          FKF_IDDOC = FK7_IDDOC"                                                      + c_ent

            cQuery += "WHERE        SE2.D_E_L_E_T_ = ' '"                                                       + c_ent
            cQuery += "AND          E2_FILIAL = '" + Substr(self:cFilialLogada,1,4) + "'"                       + c_ent
            cQuery += "AND          A2_TIPO = 'F' "                                                             + c_ent
            cQuery += cFilterJcpDiv

    EndCase

    cQuery += ")"                                                                                                           + c_ent 
    cQuery += "GROUP BY     FILIAL, NOME_BENEFICIARIO, PERIODO, CPF_BENEFICIARIO, CODIGO_BENEFICIARIO, COD_NATUREZA_REND, " + c_ent
    cQuery += "             OBSERVACAO, DT_FATO_GERADOR, COMP_FP, IND_DEC_TERC, IND_RRA, IND_FCI_SCP, NR_INSC_FCI_SCP, "    + c_ent
    cQuery += "             PER_SCP, IND_JUD, DT_ESCR_CONT, OBSERV2, TP_PROC_RRA, NR_PROC_RRA, IND_ORIG_REC, DESC_RRA, "    + c_ent
    cQuery += "             QTD_MESES_RRA, CNPJ_ORIG_REGURSO, VLR_DESP_CUSTAS, VLR_DES_ADVOGADOS, NR_PROC, IND_ORI_REC2,"   + c_ent
    cQuery += "             CNPJ_ORI_RCURSO, DESCRICAO, V_DES_CUSTA, V_DES_ADVO, IND_NIF, FRM_TRIBUT "                      + c_ent
    cQuery += "ORDER BY     1,2,3"                                                                                          + c_ent

    cAlias := MpSysOpenQuery(cQuery)

    if (cAlias)->(EOF())
       self:cError  := "Não foram encontrados registros para o arquivo R4010"
       self:lError  := .T.
    else
        
        Count To nTotal
        ProcRegua(nTotal)

        While !(cAlias)->(EOF())
            
            jEmpresas           := self:mBuscaEmpresa((cAlias)->(FILIAL))
            cEmpresa            := jEmpresas["cEmpresa"]
            cEstabelecimento    := jEmpresas["cEstabelecimento"]

            cLine := "RFIP"                                                             + self:cSeparator   // TIPO DO ARQUIVO
            cLine += AllTrim((cAlias)->(PERIODO))                                       + self:cSeparator
            cLine += AllTrim(cEmpresa)                                                  + self:cSeparator   // CNPJ_EMPRESA
            cLine += AllTrim(cEstabelecimento)                                          + self:cSeparator   // CNPJ_ESTABELECIMENTO
            cLine += AllTrim((cAlias)->(CPF_BENEFICIARIO))                              + self:cSeparator
            cLine += AllTrim((cAlias)->(CODIGO_BENEFICIARIO))                           + self:cSeparator
            cLine += AllTrim((cAlias)->(COD_NATUREZA_REND))                             + self:cSeparator
            cLine += AllTrim((cAlias)->(OBSERVACAO))                                    + self:cSeparator
            cLine += AllTrim((cAlias)->(DT_FATO_GERADOR))                               + self:cSeparator
            cLine += AllTrim((cAlias)->(COMP_FP))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_DEC_TERC))                                  + self:cSeparator
            cLine += AllTrim(Transform((cAlias)->(VALOR_BRUTO),"@E 999999999.99"))      + self:cSeparator
            cLine += AllTrim(Transform((cAlias)->(VLR_REND_TRIB),"@E 999999999.99"))    + self:cSeparator
            cLine += AllTrim(Transform((cAlias)->(VLR_IR),"@E 999999999.99"))           + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_RRA))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_FCI_SCP))                                   + self:cSeparator
            cLine += AllTrim((cAlias)->(NR_INSC_FCI_SCP))                               + self:cSeparator
            cLine += AllTrim((cAlias)->(PER_SCP))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_JUD))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(DT_ESCR_CONT))                                  + self:cSeparator
            cLine += AllTrim((cAlias)->(OBSERV2))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(TP_PROC_RRA))                                   + self:cSeparator
            cLine += AllTrim((cAlias)->(NR_PROC_RRA))                                   + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_ORIG_REC))                                  + self:cSeparator
            cLine += AllTrim((cAlias)->(DESC_RRA))                                      + self:cSeparator
            cLine += AllTrim((cAlias)->(QTD_MESES_RRA))                                 + self:cSeparator
            cLine += AllTrim((cAlias)->(CNPJ_ORIG_REGURSO))                             + self:cSeparator
            cLine += AllTrim((cAlias)->(VLR_DESP_CUSTAS))                               + self:cSeparator
            cLine += AllTrim((cAlias)->(VLR_DES_ADVOGADOS))                             + self:cSeparator
            cLine += AllTrim((cAlias)->(NR_PROC))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_ORI_REC2))                                  + self:cSeparator
            cLine += AllTrim((cAlias)->(CNPJ_ORI_RCURSO))                               + self:cSeparator
            cLine += AllTrim((cAlias)->(DESCRICAO))                                     + self:cSeparator
            cLine += AllTrim((cAlias)->(V_DES_CUSTA))                                   + self:cSeparator
            cLine += AllTrim((cAlias)->(V_DES_ADVO))                                    + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_NIF))                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(FRM_TRIBUT))

            jBeneficario := { ;
                "cCgc": AllTrim((cAlias)->(CPF_BENEFICIARIO)),;
                "cNome": AllTrim((cAlias)->(NOME_BENEFICIARIO)),;
                "cEmpresa": cEmpresa,;
                "cEstabelecimento": cEstabelecimento }

            self:mAddBeneficiario(jBeneficario)

            FWrite(self:nFile, cLine + c_ent)

            IncProc("Gerando arquivo " + self:cTitle + "...")
            FreeObj(jBeneficario)
            FreeObj(jEmpresas)
            (cAlias)->(DBSkip())
        enddo
    endif

    (cAlias)->(DbCloseArea())

return .T.

Method mAddBeneficiario(jBeneficario as Json) as Logical Class cGeraReinf4000
    
    if !self:jBeneficiarios:hasProperty(jBeneficario["cCgc"])
        self:jBeneficiarios[jBeneficario["cCgc"]] := jBeneficario
    endif

    FreeObj(jBeneficario)

Return .T.

Method mGeraBeneficiario() as Logical Class cGeraReinf4000

    Local nFile             := 0    as Integer
    Local nX                := 0    as Integer
    Local aBeneficiarios            as Array
    Local cLine                     as Character
    Local cKey                      as Character
    Local cFile                     as Character

    aBeneficiarios := self:jBeneficiarios:GetNames()

    if Empty(aBeneficiarios)
        self:cError := "Nao foram encontrados beneficiarios"
        self:lError := .T.
        return
    endif

    cFile := self:cFileDir + "beneficiarios-" + self:cFileName

    nFile := FCreate(cFile)

    if nFile < 0
        self:cError := "Erro ao gerar o arquivo de beneficiarios"
        self:lError := .T.
        return
    endif

    ProcRegua(len(aBeneficiarios))

    for nX := 1 to len(aBeneficiarios)
        cKey    := aBeneficiarios[nX]

        cLine     := "RFBN"                                         + self:cSeparator   // TIPO DO ARQUIVO
        cLine     += self:jBeneficiarios[cKey]["cEmpresa"]          + self:cSeparator
        cLine     += self:jBeneficiarios[cKey]["cEstabelecimento"]  + self:cSeparator
        cLine     += self:jBeneficiarios[cKey]["cCgc"]              + self:cSeparator
        cLine     += ""                                             + self:cSeparator   // CODIGO_BENEFICIARIO
        cLine     += self:jBeneficiarios[cKey]["cNome"]             + self:cSeparator
        cLine     += ""                                             + self:cSeparator   // PAIS
        cLine     += "3"                                            + self:cSeparator   // IND_NIF
        cLine     += ""                                             + self:cSeparator   // NIF
        cLine     += ""                                             + self:cSeparator   // DESCRICAO_LOGRADOURO
        cLine     += ""                                             + self:cSeparator   // NUMERO_LOGRAD
        cLine     += ""                                             + self:cSeparator   // COMP_LOGRADOURO
        cLine     += ""                                             + self:cSeparator   // BAIRRO
        cLine     += ""                                             + self:cSeparator   // CIDADE
        cLine     += ""                                             + self:cSeparator   // ESTADO
        cLine     += ""                                             + self:cSeparator   // CEP
        cLine     += ""                                                                 // TELEFONE
        
        IncProc("Gerando arquivo de beneficiarios...")
        FWrite(nFile, cLine + c_ent)
    next

return .T.

Method mMonta4020() as Logical Class cGeraReinf4000
    Local cQuery            as Character
    Local cAlias            as Character
    Local cLine             as Character
    Local cEmpresa          as Character
    Local cEstabelecimento  as Character
    Local nTotal            as Integer

    cQuery := "SELECT DISTINCT FILIAL, PERIODO, CNPJ_BENEFICIARIO, CODIGO_BENEFICIARIO,"                            + c_ent
    cQuery += "NOME_BENEFICIARIO, ISEN_IMUNE, COD_NATUREZA_REND, OBSERVACAO, DT_FATO_GERADOR,"                      + c_ent
    cQuery += "SUM(VALOR_BRUTO) VALOR_BRUTO, INDICATIVO_FCI_SCP, CNPJ_FCI_SCP, PERCENTUAL_SCP, IND_DECISAO_JUD,"    + c_ent
    cQuery += "COD_PAIS_DESTINO, DT_ESCR_CONT, OBS_2, SUM(VALOR_BASE_IR) VALOR_BASE_IR, SUM(VALOR_IR) VALOR_IR,"    + c_ent
    cQuery += "SUM(VAL_BAS_AGREG) VAL_BAS_AGREG, SUM(VALOR_AGREG) VALOR_AGREG, SUM(VAL_BAS_CSLL) VAL_BAS_CSLL,"     + c_ent
	cQuery += "SUM(VALOR_CSLL) VALOR_CSLL, SUM(VAL_BAS_COFINS) VAL_BAS_COFINS, SUM(VALOR_COFINS) VALOR_COFINS, "    + c_ent
    cQuery += "SUM(VAL_BAS_PIS) VAL_BAS_PIS, SUM(VALOR_PIS) VALOR_PIS, INDIC_NIF, NIF, COD_RELACAO_FONTE,"          + c_ent
	cQuery += "COD_FORM_TRIBUT, LOGRADOURO, NUMERO_LOGRAD, COMPL_LOGRAD, BAIRRO, CIDADE, ESTADO, CEP, TELEFONE "    + c_ent
    cQuery += "FROM ("                                                                                              + c_ent

    Do Case
        Case self:nOption == 4 .Or. self:nOption == 6
            cQuery += "SELECT F1_FILIAL FILIAL, "                                                           + c_ent
            if self:nOption == 4
                cQuery += "TO_CHAR(TO_DATE(E2_EMIS1, 'YYYYMMDD'),'YYYY-MM') PERIODO,"                       + c_ent
            elseif self:nOption == 6
                cQuery += "TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'),'YYYY-MM') PERIODO,"                       + c_ent
            else
                cQuery += "TO_CHAR(TO_DATE(E2_EMIS1, 'YYYYMMDD'),'YYYY-MM') PERIODO,"                       + c_ent
            endif
            cQuery += "A2_CGC CNPJ_BENEFICIARIO,"                                                           + c_ent
            cQuery += "NULL CODIGO_BENEFICIARIO,"                                                           + c_ent
            cQuery += "A2_NOME	NOME_BENEFICIARIO,"                                                         + c_ent
            cQuery += "'1' ISEN_IMUNE,"                                                                     + c_ent
            cQuery += "NVL(TRIM(DHR_NATREN),F2Q_NATREN) COD_NATUREZA_REND,"                                 + c_ent
            cQuery += "NULL	OBSERVACAO,"                                                                    + c_ent
            if self:nOption == 4
                cQuery += "TO_CHAR(TO_DATE(E2_EMIS1, 'YYYYMMDD'),'DD/MM/YYYY') DT_FATO_GERADOR,"            + c_ent
            elseif self:nOption == 6
                cQuery += "TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'),'DD/MM/YYYY') DT_FATO_GERADOR,"            + c_ent
            else
                cQuery += "TO_CHAR(TO_DATE(E2_EMIS1, 'YYYYMMDD'),'DD/MM/YYYY') DT_FATO_GERADOR,"            + c_ent
            endif
            cQuery += "D1_TOTAL VALOR_BRUTO,"                                                               + c_ent
            cQuery += "NULL	INDICATIVO_FCI_SCP,"                                                            + c_ent
            cQuery += "NULL	CNPJ_FCI_SCP,"                                                                  + c_ent
            cQuery += "NULL	PERCENTUAL_SCP,"                                                                + c_ent
            cQuery += "NULL IND_DECISAO_JUD,"                                                               + c_ent
            cQuery += "NULL	COD_PAIS_DESTINO,"                                                              + c_ent
            cQuery += "CASE"                                                                                + c_ent
            cQuery += "     WHEN NVL(TRIM(DHR_NATREN),F2Q_NATREN) = '12052'"                                + c_ent
            cQuery += "     THEN TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY')"                    + c_ent
            cQuery += "     ELSE NULL"                                                                      + c_ent
            cQuery += "END DT_ESCR_CONT,"                                                                   + c_ent
            cQuery += "NULL	OBS_2,"                                                                         + c_ent
            cQuery += "D1_BASEIRR VALOR_BASE_IR,"                                                           + c_ent
            cQuery += "D1_VALIRR VALOR_IR,"                                                                 + c_ent
            cQuery += "NULL	VAL_BAS_AGREG,"                                                                 + c_ent
            cQuery += "NULL	VALOR_AGREG,"                                                                   + c_ent
            cQuery += "NULL	VAL_BAS_CSLL,"                                                                  + c_ent
            cQuery += "NULL	VALOR_CSLL,"                                                                    + c_ent
            cQuery += "NULL	VAL_BAS_COFINS,"                                                                + c_ent
            cQuery += "NULL	VALOR_COFINS,"                                                                  + c_ent
            cQuery += "NULL VAL_BAS_PIS,"                                                                   + c_ent
            cQuery += "NULL VALOR_PIS,"                                                                     + c_ent
            cQuery += "NULL INDIC_NIF,"                                                                     + c_ent
            cQuery += "NULL	NIF,"                                                                           + c_ent
            cQuery += "NULL	COD_RELACAO_FONTE,"                                                             + c_ent
            cQuery += "NULL	COD_FORM_TRIBUT,"                                                               + c_ent
            cQuery += "NULL	LOGRADOURO,"                                                                    + c_ent
            cQuery += "NULL	NUMERO_LOGRAD,"                                                                 + c_ent
            cQuery += "NULL	COMPL_LOGRAD,"                                                                  + c_ent
            cQuery += "NULL	BAIRRO,"                                                                        + c_ent
            cQuery += "NULL	CIDADE,"                                                                        + c_ent
            cQuery += "NULL	ESTADO,"                                                                        + c_ent
            cQuery += "NULL	CEP,"                                                                           + c_ent
            cQuery += "NULL	TELEFONE"                                                                       + c_ent

            cQuery += "FROM SIGAGMS." + RetSqlName("SF1") + " SF1"                                          + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SD1") + " SD1"                                    + c_ent
            cQuery += "ON       F1_FILIAL = D1_FILIAL"                                                      + c_ent
            cQuery += "AND      F1_SERIE = D1_SERIE"                                                        + c_ent
            cQuery += "AND      F1_DOC = D1_DOC"                                                            + c_ent
            cQuery += "AND      F1_FORNECE = D1_FORNECE"                                                    + c_ent
            cQuery += "AND      F1_LOJA     = D1_LOJA"                                                      + c_ent
            cQuery += "AND      F1_TIPO = D1_TIPO"                                                          + c_ent
            cQuery += "AND      F1_EMISSAO = D1_EMISSAO"                                                    + c_ent
            cQuery += "AND      SF1.D_E_L_E_T_ = SD1.D_E_L_E_T_"                                            + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SA2") + " SA2"                                    + c_ent
            cQuery += "ON       A2_FILIAL = '" + FwXFilial("SA2") + "'"                                     + c_ent
            cQuery += "AND      F1_FORNECE = A2_COD"                                                        + c_ent
            cQuery += "AND      F1_LOJA     = A2_LOJA "                                                     + c_ent
            cQuery += "AND      SF1.D_E_L_E_T_ = SA2.D_E_L_E_T_"                                            + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SE2") + " SE2"                                    + c_ent
            cQuery += "ON       SE2.D_E_L_E_T_ = SF1.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND      E2_FILORIG = F1_FILIAL"                                                     + c_ent
            cQuery += "AND      E2_FILIAL = RPAD(SUBSTR(F1_FILIAL,1,4),6,' ')"                              + c_ent
            cQuery += "AND      E2_PREFIXO = F1_SERIE"                                                      + c_ent
            cQuery += "AND      E2_NUM = F1_DOC"                                                            + c_ent
            cQuery += "AND      E2_FORNECE = F1_FORNECE"                                                    + c_ent
            cQuery += "AND      E2_TIPO = 'NF'"                                                             + c_ent

            cQuery += "LEFT JOIN SIGAGMS." + RetSqlName("DHR") + " DHR "                                    + c_ent
            cQuery += "ON       DHR.D_E_L_E_T_ = SD1.D_E_L_E_T_ "                                           + c_ent
            cQuery += "AND      DHR_DOC = D1_DOC "                                                          + c_ent
            cQuery += "AND      DHR_SERIE = D1_SERIE "                                                      + c_ent
            cQuery += "AND      DHR_FORNEC = D1_FORNECE "                                                   + c_ent
            cQuery += "AND      DHR_LOJA = D1_LOJA "                                                        + c_ent
            cQuery += "AND      DHR_ITEM = D1_ITEM "                                                        + c_ent

            cQuery += "LEFT JOIN SIGAGMS." + RetSqlName("F2Q") + " F2Q"                                     + c_ent
            cQuery += "ON       SD1.D_E_L_E_T_ = F2Q.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND      F2Q_FILIAL = '" + FwXFilial("F2Q") + "'"                                    + c_ent
            cQuery += "AND      F2Q_PRODUT = D1_COD"                                                        + c_ent

            cQuery += "WHERE    SF1.D_E_L_E_T_ = ' ' "                                                      + c_ent
            cQuery += "AND      F1_FILIAL BETWEEN '" + Substr(self:cFilialLogada,1,4) + "00' "              + c_ent
            cQuery += "             AND '" + Substr(self:cFilialLogada,1,4) + "ZZ' "                        + c_ent

            if self:nOption == 4
                cQuery += "AND      E2_EMIS1 BETWEEN '" + Dtos(self:dDateStart) + "' "                      + c_ent
                cQuery += "             AND '" + Dtos(self:dDateEnd) + "' "                                 + c_ent
                cQuery += "AND      E2_CODRET = '1708'"                                                     + c_ent
                cQuery += "AND      A2_TIPO = 'J'"                                                          + c_ent
            elseif self:nOption == 6
                cQuery += "AND      E2_BAIXA BETWEEN '" + Dtos(self:dDateStart) + "' "                      + c_ent
                cQuery += "             AND '" + Dtos(self:dDateEnd) + "' "                                 + c_ent
                cQuery += "AND      E2_CODRET = '0422'"                                                     + c_ent
                cQuery += "AND      A2_TIPO = 'X'"                                                          + c_ent
            endif
            
            cQuery += "AND D1_BASEIRR > 0"                                                                  + c_ent

            cQuery += "UNION ALL"                                                                           + c_ent

            cQuery += "SELECT F1_FILIAL FILIAL, "                                                           + c_ent
            cQuery += "TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'),'YYYY-MM') PERIODO,"                           + c_ent
            cQuery += "A2_CGC CNPJ_BENEFICIARIO,"                                                           + c_ent
            cQuery += "NULL CODIGO_BENEFICIARIO,"                                                           + c_ent
            cQuery += "A2_NOME	NOME_BENEFICIARIO,"                                                         + c_ent
            cQuery += "'1' ISEN_IMUNE,"                                                                     + c_ent
            cQuery += "NVL(TRIM(DHR_NATREN),F2Q_NATREN) COD_NATUREZA_REND,"                                 + c_ent
            cQuery += "NULL	OBSERVACAO,"                                                                    + c_ent
            cQuery += "TO_CHAR(TO_DATE(E2_BAIXA, 'YYYYMMDD'),'DD/MM/YYYY') DT_FATO_GERADOR,"                + c_ent
            cQuery += "D1_TOTAL VALOR_BRUTO,"                                                               + c_ent
            cQuery += "NULL	INDICATIVO_FCI_SCP,"                                                            + c_ent
            cQuery += "NULL	CNPJ_FCI_SCP,"                                                                  + c_ent
            cQuery += "NULL	PERCENTUAL_SCP,"                                                                + c_ent
            cQuery += "NULL IND_DECISAO_JUD,"                                                               + c_ent
            cQuery += "NULL	COD_PAIS_DESTINO,"                                                              + c_ent
            cQuery += "CASE"                                                                                + c_ent
            cQuery += "    WHEN NVL(TRIM(DHR_NATREN),F2Q_NATREN) = '12052'"                                 + c_ent
            cQuery += "    THEN TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY')"                     + c_ent
            cQuery += "    ELSE NULL"                                                                       + c_ent
            cQuery += "END DT_ESCR_CONT,"                                                                   + c_ent
            cQuery += "NULL	OBS_2,"                                                                         + c_ent
            cQuery += "NULL VALOR_BASE_IR,"                                                                 + c_ent
            cQuery += "NULL VALOR_IR,"                                                                      + c_ent

            if self:nOption == 4
                // PCC Agregado
                cQuery += "CASE "                                                                           + c_ent
                cQuery += "    WHEN E2_CODRCOF = '5952' AND E2_CODRPIS = '5952' AND E2_CODRCSL = '5952'"    + c_ent
                cQuery += "    THEN "                                                                       + c_ent
                cQuery += "        D1_BASEPIS"                                                              + c_ent
                cQuery += "    ELSE NULL"                                                                   + c_ent
                cQuery += "END VAL_BAS_AGREG,"                                                              + c_ent
                cQuery += "CASE "                                                                           + c_ent
                cQuery += "    WHEN E2_CODRCOF = '5952' AND E2_CODRPIS = '5952' AND E2_CODRCSL = '5952'"    + c_ent
                cQuery += "    THEN "                                                                       + c_ent
                cQuery += "        (D1_VALCSL + D1_VALCOF + D1_VALPIS)"                                     + c_ent
                cQuery += "    ELSE NULL"                                                                   + c_ent
                cQuery += "END VALOR_AGREG,"                                                                + c_ent
                // CSLL
                cQuery += "CASE"                                                                            + c_ent
                cQuery += "    WHEN E2_CODRCSL = '5987' AND D1_BASECSL <> 0"                                + c_ent
                cQuery += "    THEN D1_BASECSL"                                                             + c_ent
                cQuery += "    ELSE NULL"                                                                   + c_ent
                cQuery += "END VAL_BAS_CSLL,"                                                               + c_ent
                cQuery += "CASE"                                                                            + c_ent
                cQuery += "    WHEN E2_CODRCSL = '5987' AND D1_BASECSL <> 0"                                + c_ent
                cQuery += "    THEN D1_VALCSL"                                                              + c_ent
                cQuery += "    ELSE NULL"                                                                   + c_ent
                cQuery += "END VALOR_CSLL,"                                                                 + c_ent
                // COFINS
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRCOF = '5960' AND D1_BASECOF <> 0"                                 + c_ent
                cQuery +="    THEN D1_BASECOF"                                                              + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VAL_BAS_COFINS,"                                                              + c_ent
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRCOF = '5960' AND D1_BASECOF <> 0"                                 + c_ent
                cQuery +="    THEN D1_VALCOF"                                                               + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VALOR_COFINS,"                                                                + c_ent
                // PIS
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRPIS = '5979' AND D1_BASEPIS <> 0"                                 + c_ent
                cQuery +="    THEN D1_BASEPIS"                                                              + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VAL_BAS_PIS,"                                                                 + c_ent
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRPIS = '5979' AND D1_BASEPIS <> 0"                                 + c_ent
                cQuery +="    THEN D1_VALPIS"                                                               + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VALOR_PIS,"                                                                   + c_ent
            elseif self:nOption == 6
                cQuery += "NULL	VAL_BAS_AGREG,"                                                             + c_ent
                cQuery += "NULL	VALOR_AGREG,"                                                               + c_ent
                cQuery += "NULL	VAL_BAS_CSLL,"                                                              + c_ent
                cQuery += "NULL	VALOR_CSLL,"                                                                + c_ent
                // COFINS
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRCOF = '5442' AND D1_BASECOF <> 0"                                 + c_ent
                cQuery +="    THEN D1_BASECOF"                                                              + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VAL_BAS_COFINS,"                                                              + c_ent
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRCOF = '5442' AND D1_BASECOF <> 0"                                 + c_ent
                cQuery +="    THEN D1_VALCOF"                                                               + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VALOR_COFINS,"                                                                + c_ent
                // PIS
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRPIS = '5434' AND D1_BASEPIS <> 0"                                 + c_ent
                cQuery +="    THEN D1_BASEPIS"                                                              + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VAL_BAS_PIS,"                                                                 + c_ent
                cQuery +="CASE"                                                                             + c_ent
                cQuery +="    WHEN E2_CODRPIS = '5434' AND D1_BASEPIS <> 0"                                 + c_ent
                cQuery +="    THEN D1_VALPIS"                                                               + c_ent
                cQuery +="    ELSE NULL"                                                                    + c_ent
                cQuery +="END VALOR_PIS,"                                                                   + c_ent
            else
                cQuery += "NULL	VAL_BAS_AGREG,"                                                             + c_ent
                cQuery += "NULL	VALOR_AGREG,"                                                               + c_ent
                cQuery += "NULL	VAL_BAS_CSLL,"                                                              + c_ent
                cQuery += "NULL	VALOR_CSLL,"                                                                + c_ent
                cQuery += "NULL	VAL_BAS_COFINS,"                                                            + c_ent
                cQuery += "NULL	VALOR_COFINS,"                                                              + c_ent
                cQuery += "NULL VAL_BAS_PIS,"                                                               + c_ent
                cQuery += "NULL VALOR_PIS,"                                                                 + c_ent
            endif
            cQuery +="NULL	INDIC_NIF,"                                                                     + c_ent
            cQuery +="NULL	NIF,"                                                                           + c_ent
            cQuery +="NULL  COD_RELACAO_FONTE,"                                                             + c_ent
            cQuery +="NULL	COD_FORM_TRIBUT,"                                                               + c_ent
            cQuery +="NULL	LOGRADOURO,"                                                                    + c_ent
            cQuery +="NULL	NUMERO_LOGRAD,"                                                                 + c_ent
            cQuery +="NULL	COMPL_LOGRAD,"                                                                  + c_ent
            cQuery +="NULL	BAIRRO,"                                                                        + c_ent
            cQuery +="NULL	CIDADE,"                                                                        + c_ent
            cQuery +="NULL	ESTADO,"                                                                        + c_ent
            cQuery +="NULL	CEP,"                                                                           + c_ent
            cQuery +="NULL	TELEFONE"                                                                       + c_ent

            cQuery += "FROM SIGAGMS." + RetSqlName("SF1") + " SF1"                                          + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SD1") + " SD1"                                    + c_ent
            cQuery += "ON       F1_FILIAL = D1_FILIAL"                                                      + c_ent
            cQuery += "AND      F1_SERIE = D1_SERIE"                                                        + c_ent
            cQuery += "AND      F1_DOC = D1_DOC"                                                            + c_ent
            cQuery += "AND      F1_FORNECE = D1_FORNECE"                                                    + c_ent
            cQuery += "AND      F1_LOJA     = D1_LOJA"                                                      + c_ent
            cQuery += "AND      F1_TIPO = D1_TIPO"                                                          + c_ent
            cQuery += "AND      F1_EMISSAO = D1_EMISSAO"                                                    + c_ent
            cQuery += "AND      SF1.D_E_L_E_T_ = SD1.D_E_L_E_T_"                                            + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SA2") + " SA2"                                    + c_ent
            cQuery += "ON       A2_FILIAL = '" + FwXFilial("SA2") + "'"                                     + c_ent
            cQuery += "AND      F1_FORNECE = A2_COD"                                                        + c_ent
            cQuery += "AND      F1_LOJA     = A2_LOJA "                                                     + c_ent
            cQuery += "AND      SF1.D_E_L_E_T_ = SA2.D_E_L_E_T_"                                            + c_ent

            cQuery += "INNER JOIN SIGAGMS." + RetSqlName("SE2") + " SE2"                                    + c_ent
            cQuery += "ON       SE2.D_E_L_E_T_ = SF1.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND      E2_FILORIG = F1_FILIAL"                                                     + c_ent
            cQuery += "AND      E2_FILIAL = RPAD(SUBSTR(F1_FILIAL,1,4),6,' ')"                              + c_ent
            cQuery += "AND      E2_PREFIXO = F1_SERIE"                                                      + c_ent
            cQuery += "AND      E2_NUM = F1_DOC"                                                            + c_ent
            cQuery += "AND      E2_FORNECE = F1_FORNECE"                                                    + c_ent
            cQuery += "AND      E2_TIPO = 'NF'"                                                             + c_ent

            cQuery += "LEFT JOIN SIGAGMS." + RetSqlName("DHR") + " DHR "                                    + c_ent
            cQuery += "ON       DHR.D_E_L_E_T_ = SD1.D_E_L_E_T_ "                                           + c_ent
            cQuery += "AND      DHR_DOC = D1_DOC "                                                          + c_ent
            cQuery += "AND      DHR_SERIE = D1_SERIE "                                                      + c_ent
            cQuery += "AND      DHR_FORNEC = D1_FORNECE "                                                   + c_ent
            cQuery += "AND      DHR_LOJA = D1_LOJA "                                                        + c_ent
            cQuery += "AND      DHR_ITEM = D1_ITEM "                                                        + c_ent

            cQuery += "LEFT JOIN SIGAGMS." + RetSqlName("F2Q") + " F2Q"                                     + c_ent
            cQuery += "ON       SD1.D_E_L_E_T_ = F2Q.D_E_L_E_T_"                                            + c_ent
            cQuery += "AND      F2Q_FILIAL = '" + FwXFilial("F2Q") + "'"                                    + c_ent
            cQuery += "AND      F2Q_PRODUT = D1_COD"                                                        + c_ent

            cQuery += "WHERE    SF1.D_E_L_E_T_ = ' ' "                                                      + c_ent
            cQuery += "AND      F1_FILIAL BETWEEN '" + Substr(self:cFilialLogada,1,4) + "00' "              + c_ent
            cQuery += "             AND '" + Substr(self:cFilialLogada,1,4) + "ZZ' "                        + c_ent
            cQuery += "AND      E2_BAIXA BETWEEN '" + Dtos(self:dDateStart) + "' "                          + c_ent
            cQuery += "             AND '" + Dtos(self:dDateEnd) + "' "                                     + c_ent

            if self:nOption == 4
                cQuery += "AND      (E2_BASEPIS > 0 OR E2_BASECOF > 0)"                                     + c_ent
                cQuery += "AND      A2_TIPO = 'J'"                                                          + c_ent
            elseif self:nOption == 6
                cQuery += "AND      (E2_BASEPIS > 0 OR E2_BASECOF > 0 OR E2_BASECSL > 0)"                   + c_ent
                cQuery += "AND      A2_TIPO = 'X'"                                                          + c_ent
            endif

        Case self:nOption == 5
            cQuery += "SELECT DISTINCT E2_FILIAL FILIAL,"                                                   + c_ent
            cQuery += "TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'YYYY-MM') PERIODO,"                        + c_ent
            cQuery += "A2_CGC CNPJ_BENEFICIARIO,"                                                           + c_ent
            cQuery += "NULL CODIGO_BENEFICIARIO,"                                                           + c_ent
            cQuery += "A2_NOME	NOME_BENEFICIARIO,"                                                         + c_ent
            cQuery += "'1' ISEN_IMUNE,"                                                                     + c_ent
            cQuery += "NVL(TRIM(FKF_NATREN),ED_NATREN) COD_NATUREZA_REND,"                                  + c_ent
            cQuery += "NULL OBSERVACAO,"                                                                    + c_ent
            cQuery += "TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY') DT_FATO_GERADOR,"             + c_ent
            cQuery += "E2_VALOR VALOR_BRUTO,"                                                               + c_ent
            cQuery += "NULL	INDICATIVO_FCI_SCP,"                                                            + c_ent
            cQuery += "NULL	CNPJ_FCI_SCP,"                                                                  + c_ent
            cQuery += "NULL	PERCENTUAL_SCP,"                                                                + c_ent
            cQuery += "NULL IND_DECISAO_JUD,"                                                               + c_ent
            cQuery += "NULL	COD_PAIS_DESTINO,"                                                              + c_ent
            cQuery += "CASE"                                                                                + c_ent
            cQuery += "    WHEN FKF_NATREN = '12052'"                                                       + c_ent
            cQuery += "    THEN TO_CHAR(TO_DATE(E2_EMISSAO, 'YYYYMMDD'), 'DD/MM/YYYY')"                     + c_ent
            cQuery += "    ELSE NULL"                                                                       + c_ent
            cQuery += "END DT_ESCR_CONT,"                                                                   + c_ent
            cQuery += "NULL	OBS_2,"                                                                         + c_ent
            cQuery += "E2_BASEIRF VALOR_BASE_IR,"                                                           + c_ent
            cQuery += "E2_IRRF VALOR_IR,"                                                                   + c_ent
            cQuery += "NULL	VAL_BAS_AGREG,"                                                                 + c_ent
            cQuery += "NULL	VALOR_AGREG,"                                                                   + c_ent
            cQuery += "NULL	VAL_BAS_CSLL,"                                                                  + c_ent
            cQuery += "NULL	VALOR_CSLL,"                                                                    + c_ent
            cQuery += "NULL	VAL_BAS_COFINS,"                                                                + c_ent
            cQuery += "NULL	VALOR_COFINS,"                                                                  + c_ent
            cQuery += "NULL VAL_BAS_PIS,"                                                                   + c_ent
            cQuery += "NULL VALOR_PIS,"                                                                     + c_ent
            cQuery += "NULL INDIC_NIF,"                                                                     + c_ent
            cQuery += "NULL	NIF,"                                                                           + c_ent
            cQuery += "NULL	COD_RELACAO_FONTE,"                                                             + c_ent
            cQuery += "NULL	COD_FORM_TRIBUT,"                                                               + c_ent
            cQuery += "NULL	LOGRADOURO,"                                                                    + c_ent
            cQuery += "NULL	NUMERO_LOGRAD,"                                                                 + c_ent
            cQuery += "NULL	COMPL_LOGRAD,"                                                                  + c_ent
            cQuery += "NULL	BAIRRO,"                                                                        + c_ent
            cQuery += "NULL	CIDADE,"                                                                        + c_ent
            cQuery += "NULL	ESTADO,"                                                                        + c_ent
            cQuery += "NULL	CEP,"                                                                           + c_ent
            cQuery += "NULL	TELEFONE"                                                                       + c_ent

            cQuery += "FROM SIGAGMS." + RetSqlName("SE2") + " SE2 "                                         + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("SA2") + " SA2"                                     + c_ent
            cQuery += "ON           A2_FILIAL = '"+ FwXfilial("SA2") + "'"                                     + c_ent
            cQuery += "AND          E2_FORNECE = A2_COD"                                                       + c_ent
            cQuery += "AND          E2_LOJA     = A2_LOJA "                                                    + c_ent
            cQuery += "AND          SE2.D_E_L_E_T_ = SA2.D_E_L_E_T_"                                           + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("FK7") + " FK7"                                     + c_ent
            cQuery += "ON           FK7_ALIAS = 'SE2'"                                                         + c_ent
            cQuery += "AND          FK7.D_E_L_E_T_ = SE2.D_E_L_E_T_"                                           + c_ent
            cQuery += "AND          FK7_FILTIT = E2_FILIAL"                                                    + c_ent
            cQuery += "AND          FK7_PREFIX = E2_PREFIXO"                                                   + c_ent
            cQuery += "AND          FK7_NUM = E2_NUM"                                                          + c_ent
            cQuery += "AND          FK7_PARCEL = E2_PARCELA"                                                   + c_ent
            cQuery += "AND          FK7_TIPO = E2_TIPO"                                                        + c_ent
            cQuery += "AND          FK7_CLIFOR = E2_FORNECE"                                                   + c_ent
            cQuery += "AND          FK7_LOJA	= E2_LOJA"                                                     + c_ent

            cQuery += "LEFT JOIN    SIGAGMS." + RetSqlName("FKF") + " FKF"                                     + c_ent
            cQuery += "ON           FKF.D_E_L_E_T_ = FK7.D_E_L_E_T_"                                           + c_ent
            cQuery += "AND          FKF_FILIAL BETWEEN SUBSTR(FK7_FILIAL,1,4) || '00'"                         + c_ent
            cQuery += "                 AND SUBSTR(FK7_FILIAL,1,4) || 'ZZ'"                                    + c_ent
            cQuery += "AND          FKF_IDDOC = FK7_IDDOC"                                                     + c_ent

            cQuery += "LEFT JOIN SIGAGMS." + RetSqlName("SED") + " SED "                                    + c_ent
            cQuery += "ON           SED.D_E_L_E_T_ = SE2.D_E_L_E_T_"                                        + c_ent
            cQuery += "AND          ED_FILIAL = '" + FwXFilial("SED") + "' "                                + c_ent
            cQuery += "AND          ED_CODIGO = E2_NATUREZ "                                                + c_ent

            cQuery += "WHERE    SE2.D_E_L_E_T_ = ' '"                                                       + c_ent
            cQuery += "AND      E2_FILIAL = '" + Substr(self:cFilialLogada,1,4) + "'"                       + c_ent
            cQuery += "AND      E2_EMISSAO BETWEEN '" + Dtos(self:dDateStart) + "' "                        + c_ent
            cQuery += "             AND '" + Dtos(self:dDateEnd) + "' "                                     + c_ent

            cQuery += "AND      E2_CODRET = '5706'"                                                         + c_ent
            cQuery += "AND      E2_TIPO = 'JCP'"                                                            + c_ent
            cQuery += "AND      A2_TIPO = 'J'"                                                              + c_ent

    EndCase

    cQuery += ")"                                                                                                       + c_ent 
    cQuery += "GROUP BY     FILIAL, PERIODO, CNPJ_BENEFICIARIO, CODIGO_BENEFICIARIO, NOME_BENEFICIARIO, ISEN_IMUNE, "   + c_ent
    cQuery += "             COD_NATUREZA_REND, OBSERVACAO, DT_FATO_GERADOR, INDICATIVO_FCI_SCP, CNPJ_FCI_SCP, "         + c_ent
    cQuery += "             PERCENTUAL_SCP, IND_DECISAO_JUD,COD_PAIS_DESTINO, DT_ESCR_CONT, OBS_2, INDIC_NIF,"          + c_ent
    cQuery += "             NIF, COD_RELACAO_FONTE, COD_FORM_TRIBUT, LOGRADOURO, NUMERO_LOGRAD, COMPL_LOGRAD,"          + c_ent
    cQuery += "             BAIRRO, CIDADE, ESTADO, CEP, TELEFONE "                                                     + c_ent
    cQuery += "ORDER BY     1,2,3"

    cAlias := MpSysOpenQuery(cQuery)

    if (cAlias)->(EOF())
        self:cError  := "Não foram encontrados registros para o arquivo R4020"
        self:lError  := .T.
    else    

        Count To nTotal
        ProcRegua(nTotal)

        While !(cAlias)->(EOF())
            jEmpresas           := self:mBuscaEmpresa((cAlias)->(FILIAL))
            cEmpresa            := jEmpresas["cEmpresa"]
            cEstabelecimento    := jEmpresas["cEstabelecimento"]

            cLine := AllTrim((cAlias)->(PERIODO))                                                                                   + self:cSeparator
            cLine += cEmpresa                                                                                                       + self:cSeparator
            cLine += cEstabelecimento                                                                                               + self:cSeparator
            cLine += AllTrim((cAlias)->(CNPJ_BENEFICIARIO))                                                                         + self:cSeparator
            cLine += AllTrim((cAlias)->(CODIGO_BENEFICIARIO))                                                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(NOME_BENEFICIARIO))                                                                         + self:cSeparator
            cLine += AllTrim((cAlias)->(ISEN_IMUNE))                                                                                + self:cSeparator
            cLine += AllTrim((cAlias)->(COD_NATUREZA_REND))                                                                         + self:cSeparator
            cLine += AllTrim((cAlias)->(OBSERVACAO))                                                                                + self:cSeparator
            cLine += AllTrim((cAlias)->(DT_FATO_GERADOR))                                                                           + self:cSeparator
            cLine += AllTrim(Transform((cAlias)->(VALOR_BRUTO),"@E 999999999.99"))                                                  + self:cSeparator
            cLine += AllTrim((cAlias)->(INDICATIVO_FCI_SCP))                                                                        + self:cSeparator
            cLine += AllTrim((cAlias)->(CNPJ_FCI_SCP))                                                                              + self:cSeparator
            cLine += AllTrim((cAlias)->(PERCENTUAL_SCP))                                                                            + self:cSeparator
            cLine += AllTrim((cAlias)->(IND_DECISAO_JUD))                                                                           + self:cSeparator
            cLine += AllTrim((cAlias)->(COD_PAIS_DESTINO))                                                                          + self:cSeparator
            cLine += AllTrim((cAlias)->(DT_ESCR_CONT))                                                                              + self:cSeparator
            cLine += AllTrim((cAlias)->(OBS_2))                                                                                     + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_BASE_IR)),AllTrim(Transform((cAlias)->(VALOR_BASE_IR),"@E 999999999.99")), "")     + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_IR)),AllTrim(Transform((cAlias)->(VALOR_IR),"@E 999999999.99")), "")               + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VAL_BAS_AGREG)),AllTrim(Transform((cAlias)->(VAL_BAS_AGREG),"@E 999999999.99")), "")     + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_AGREG)),AllTrim(Transform((cAlias)->(VALOR_AGREG),"@E 999999999.99")), "")         + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VAL_BAS_CSLL)),AllTrim(Transform((cAlias)->(VAL_BAS_CSLL),"@E 999999999.99")), "")       + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_CSLL)),AllTrim(Transform((cAlias)->(VALOR_CSLL),"@E 999999999.99")), "")           + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VAL_BAS_COFINS)),AllTrim(Transform((cAlias)->(VAL_BAS_COFINS),"@E 999999999.99")), "")   + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_COFINS)),AllTrim(Transform((cAlias)->(VALOR_COFINS),"@E 999999999.99")), "")       + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VAL_BAS_PIS)),AllTrim(Transform((cAlias)->(VAL_BAS_PIS),"@E 999999999.99")), "")         + self:cSeparator
            cLine += iif(!Empty((cAlias)->(VALOR_PIS)),AllTrim(Transform((cAlias)->(VALOR_PIS),"@E 999999999.99")), "")             + self:cSeparator
            cLine += AllTrim((cAlias)->(INDIC_NIF))                                                                                 + self:cSeparator
            cLine += AllTrim((cAlias)->(NIF))                                                                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(COD_RELACAO_FONTE))                                                                         + self:cSeparator
            cLine += AllTrim((cAlias)->(COD_FORM_TRIBUT))                                                                           + self:cSeparator
            cLine += AllTrim((cAlias)->(LOGRADOURO))                                                                                + self:cSeparator
            cLine += AllTrim((cAlias)->(NUMERO_LOGRAD))                                                                             + self:cSeparator
            cLine += AllTrim((cAlias)->(COMPL_LOGRAD))                                                                              + self:cSeparator
            cLine += AllTrim((cAlias)->(BAIRRO))                                                                                    + self:cSeparator
            cLine += AllTrim((cAlias)->(CIDADE))                                                                                    + self:cSeparator
            cLine += AllTrim((cAlias)->(ESTADO))                                                                                    + self:cSeparator
            cLine += AllTrim((cAlias)->(CEP))                                                                                       + self:cSeparator
            cLine += AllTrim((cAlias)->(TELEFONE))

            FWrite(self:nFile, cLine + c_ent)

            IncProc("Gerando arquivo " + self:cTitle + "...")
            (cAlias)->(DBSkip())
        Enddo
    endif

    (cAlias)->(DbCloseArea())

Return .T.
